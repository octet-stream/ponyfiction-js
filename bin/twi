#!/usr/bin/env node

"use strict";

const fs = require("fs");
const childProcess = require("child_process");
const join = require("path").join;

const TWI_ROOT =  join(__dirname, "../");
const execSync = childProcess.execSync;

process.title = "twi";
process.chdir(TWI_ROOT); // Change process.cwd() to Twi root path

// Install deps before continue
try {
  fs.statSync(`${TWI_ROOT}/node_modules`);
} catch (err) {
  if (err.code !== "ENOENT") {
    throw err;
  }

  execSync("npm install", {
    encoding: "utf-8",
    stdio: "inherit"
  });
}

// And then we can use deps from NPM
const commander = require("commander");
const ora = require("ora")();
const pify = require("pify");
const exec = pify(childProcess.exec);

function onError(err) {
  ora.text = String(err);
  ora.fail();
  process.exit(1);
}

function onFulfilled() {
  ora.text = "Done without errors.";
  ora.succeed();
  process.exit(0);
}

function runSetup(cmd) {
  ora.color = "cyan";
  ora.text = "Making backend app...";
  ora.start();
  exec(`${TWI_ROOT}/node_modules/coffee-script/bin/cake make`)
    .then(() => {
      ora.color = "yellow";
      ora.text = "Making frontend app...";
      return exec(`${TWI_ROOT}/node_modules/gulp/bin/gulp.js`);
    })
    .then(() => {
      ora.stop();
      return require(`${TWI_ROOT}/setup/setup`)(cmd);
    })
    .then(onFulfilled, onError);
}

function runMigrate(cmd) {
  const migrate = require(`${TWI_ROOT}/setup/migrate`);
  var __fulfill;

  if (cmd.D === true) {
    __fulfill = migrate.importData(cmd.E).then(() => migrate.createSu(cmd.S));
  } else {
    __fulfill = migrate(cmd);
  }

  __fulfill.then(onFulfilled, onError);
}

commander
  .version(require(`${TWI_ROOT}/package.json`).version)
  .usage("<command> [options]");

commander
  .command("setup")
  .alias("s")
  .description("run installer script")
  .option("--silent, -s", "run installer in silent mode")
  .option("--not-erase, -e", "run installer without data erasing")
  .action(runSetup);

commander
  .command("migrate")
  .alias("m")
  .description("run only migrations script")
  .option("--silent, -s", "run migrate in silent mode")
  .option("--not-erase, -e", "run migrate without data erasing")
  .option("--data-only, -d", "run only data imports")
  .action(runMigrate);

commander
  .command("run")
  .alias("r")
  .description("run Twi app")
  .action(() => require(`${TWI_ROOT}/core/server`));

commander.parse(process.argv);
process.on("error", onError);
