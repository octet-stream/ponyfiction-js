#!/usr/bin/env node

"use strict";

const fs = require("fs");
const join = require("path").join;
const exec = require("child_process").execSync;

process.title = "twi";
process.chdir(join(__dirname, "../")); // Change process.cwd() to Twi root path

// Install deps before continue
try {
  fs.statSync(join(__dirname, "../node_modules"));
} catch (err) {
  if (err.code !== "ENOENT") {
    throw err;
  }

  exec("npm install", {
    encoding: "utf-8",
    stdio: "inherit"
  });
}

// And then we can use deps from NPM
const commander = require("commander");

function onError(err) {
  console.log(String(err));
  process.exit(1);
}

function onFulfilled() {
  console.log("Done without errors");
  process.exit(0);
}

function runSetup(cmd) {
  try {
    console.log("Make backend app...");
    exec(join(__dirname, "../node_modules/coffee-script/bin/cake make"), {
      encoding: "utf-8",
      stdio: "inherit"
    });

    console.log("Make frontend app...");
    exec(join(__dirname, "../node_modules/gulp/bin/gulp.js"), {
      encoding: "utf-8",
      stdio: "inherit"
    });
  } catch (err) {
    console.log(err);
    process.exit(1);
  }

  const setup = require(join(__dirname, "../setup/setup"));
  var __fulfill;

  if (cmd.S === true) {
    __fulfill = setup.silent(cmd.C);
  } else if (cmd.C === true) {
    __fulfill = setup.clean();
  } else {
    __fulfill = setup();
  }

  __fulfill.then(onFulfilled, onError);
}

commander
  .version(require(join(__dirname, "../package.json")).version)
  .usage("<command> [options]");

commander
  .command("setup")
  .description("run installer script")
  .option("--silent, -S", "run installer in silent mode")
  .option("--clean, -C", "run installer in clean mode")
  .action(runSetup);

commander
  .command("run")
  .description("run Twi app")
  .action(() => require(join(__dirname, "../core/server")));

commander.parse(process.argv);

process.on("error", onError);
